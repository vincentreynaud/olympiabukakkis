{"version":3,"sources":["webpack:///./src/components/Back.jsx","webpack:///./src/pages/events.jsx"],"names":["Back","className","onClick","window","history","back","xmlns","viewBox","d","query","Events","data","events","pictures","title","id","edges","map","node","eventRegex","RegExp","frontmatter","picture","filter","base","match","dateArr","date","split","toUpperCase","key","to","fields","slug","fluid","childImageSharp","alt","style","width","height","marginBottom","time","venue","description"],"mappings":"6FAAA,yBAYeA,IAVf,WACE,OACE,4BAAQC,UAAU,iBAAiBC,QAAS,kBAAMC,OAAOC,QAAQC,SAC/D,yBAAKC,MAAM,6BAA6BC,QAAQ,eAC9C,0BAAMC,EAAE,6G,oCCNhB,2IAuDO,IAAMC,EAAK,aA2CHC,UA1Ff,YAA2B,IAATC,EAAQ,EAARA,KACRC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,SAEhB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,WACX,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,6BAASC,GAAG,SAASd,UAAU,0BAC5BW,EAAOI,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACbC,EAAa,IAAIC,OAAOF,EAAKG,YAAYN,GAAI,KAC5CO,EAAWT,EAASG,MAAMO,QAAO,qBAAGL,KAAgBM,KAAKC,MAAMN,MAFxC,GAKxBO,EAAUR,EAAKG,YAAYM,KAAKC,MAAM,KAChCF,EAAQ,GACNA,EAAQ,GAAGG,cAEzB,OACE,6BAAS5B,UAAU,QAAQ6B,IAAKZ,EAAKH,IACnC,kBAAC,OAAD,CAAMgB,GAAIb,EAAKc,OAAOC,MACpB,kBAAC,IAAD,CACEC,MAAOZ,EAAQJ,KAAKiB,gBAAgBD,MACpCE,IAAKlB,EAAKG,YAAYP,MAAQ,gBAC9BuB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAAUC,aAAc,aAI5D,kBAAC,OAAD,CAAMT,GAAIb,EAAKc,OAAOC,MACpB,wBAAIhC,UAAU,eAAeiB,EAAKG,YAAYP,QAEhD,wBAAIb,UAAU,iBACZ,+BACGiB,EAAKG,YAAYM,KADpB,IAC2BT,EAAKG,YAAYoB,MAAQ,mCAAgBvB,EAAKG,YAAYoB,KAAjC,KAAgD,IADpG,KAEYvB,EAAKG,YAAYqB,QAG/B,uBAAGzC,UAAU,qBAAqBiB,EAAKG,YAAYsB","file":"component---src-pages-events-jsx-5fd8770778d367f5c46f.js","sourcesContent":["import React from \"react\";\n\nfunction Back() {\n  return (\n    <button className=\"back top right\" onClick={() => window.history.back()}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n        <path d=\"M427 234.625H167.296l119.702-119.702L256 85 85 256l171 171 29.922-29.924-118.626-119.701H427v-42.75z\" />\n      </svg>\n    </button>\n  );\n}\n\nexport default Back;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport Layout from \"../components/Layout\";\nimport Back from \"../components/Back\";\nimport SEO from \"../components/SEO\";\n\nfunction Events({ data }) {\n  const { events, pictures } = data;\n\n  return (\n    <>\n      <SEO title=\"Events\" />\n      <Layout>\n        <Back />\n        <section id=\"events\" className=\"container container-sm\">\n          {events.edges.map(({ node }) => {\n            const eventRegex = new RegExp(node.frontmatter.id, \"i\");\n            const [picture] = pictures.edges.filter(({ node }) => node.base.match(eventRegex));\n\n            // try-out\n            const dateArr = node.frontmatter.date.split(\" \");\n            const day = dateArr[0];\n            const month = dateArr[1].toUpperCase();\n\n            return (\n              <article className=\"event\" key={node.id}>\n                <Link to={node.fields.slug}>\n                  <Image\n                    fluid={picture.node.childImageSharp.fluid}\n                    alt={node.frontmatter.title + \" event poster\"}\n                    style={{ width: \"100%\", height: \"33vmin\", marginBottom: \"1.5rem\" }}\n                  />\n                </Link>\n\n                <Link to={node.fields.slug}>\n                  <h2 className=\"event-title\">{node.frontmatter.title}</h2>\n                </Link>\n                <h2 className=\"event-details\">\n                  <small>\n                    {node.frontmatter.date} {node.frontmatter.time && <span>&middot; {node.frontmatter.time} </span>}{\" \"}\n                    &middot; {node.frontmatter.venue}\n                  </small>\n                </h2>\n                <p className=\"event-description\">{node.frontmatter.description}</p>\n              </article>\n            );\n          })}\n        </section>\n      </Layout>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    events: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"event\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            id\n            title\n            date(formatString: \"DD MMM\")\n            time\n            venue\n            description\n            link\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    pictures: allFile(\n      filter: { sourceInstanceName: { eq: \"images\" }, base: { regex: \"/cover/\" } }\n      sort: { fields: [name], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          base\n          childImageSharp {\n            fluid(maxHeight: 500) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Events;\n"],"sourceRoot":""}