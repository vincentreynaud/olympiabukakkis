{"version":3,"sources":["webpack:///./src/components/Back.jsx","webpack:///./src/components/EventLink.jsx","webpack:///./src/templates/event.jsx"],"names":["Back","className","onClick","window","history","back","xmlns","viewBox","d","EventLink","link","href","target","rel","query","data","event","pictures","eventRegex","RegExp","frontmatter","id","coverRegex","eventPictures","edges","filter","node","base","match","SEO","title","Layout","map","key","fluid","childImageSharp","alt","imgStyle","height","artwork","date","time","venue","dangerouslySetInnerHTML","__html","html"],"mappings":"8FAAA,yBAYeA,IAVf,WACE,OACE,4BAAQC,UAAU,iBAAiBC,QAAS,kBAAMC,OAAOC,QAAQC,SAC/D,yBAAKC,MAAM,6BAA6BC,QAAQ,eAC9C,0BAAMC,EAAE,6G,iKCIDC,MARf,YAA8B,IAATC,EAAQ,EAARA,KACnB,OACE,uBAAGT,UAAU,aAAaU,KAAMD,EAAME,OAAO,SAASC,IAAI,uBAA1D,iBC0DSC,GArDE,sBAAe,IAAZC,EAAW,EAAXA,KACRC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACTC,EAAa,IAAIC,OAAOH,EAAMI,YAAYC,GAAI,KAC9CC,EAAa,IAAIH,OAAO,QAAS,KACjCI,EAAgBN,EAASO,MAAMC,QACnC,gBAAGC,EAAH,EAAGA,KAAH,OAAcA,EAAKC,KAAKC,MAAMV,KAAgBQ,EAAKC,KAAKC,MAAMN,MAGhE,OACE,oCACE,kBAACO,EAAA,EAAD,CAAKC,MAAOd,EAAMI,YAAYU,QAC9B,kBAACC,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,MACA,6BAASC,UAAU,gCACjB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iBACZsB,EAAcS,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAD,CACEO,IAAKP,EAAKL,GACVa,MAAOR,EAAKS,gBAAgBD,MAC5BE,IAAKpB,EAAMI,YAAYU,MAAQ,WAC/B7B,UAAU,kBACVoC,SAAU,CAAEC,OAAQ,cAIzBtB,EAAMI,YAAYmB,SACjB,yBAAKtC,UAAU,iBACb,2CAAiBe,EAAMI,YAAYmB,UAGvC,kBAAC,EAAD,CAAW7B,KAAMM,EAAMI,YAAYV,QAErC,yBAAKT,UAAU,qBACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,IACb,4BAAKe,EAAMI,YAAYU,OACvB,wBAAI7B,UAAU,4BACXe,EAAMI,YAAYoB,KADrB,IAC4BxB,EAAMI,YAAYqB,MAAQ,mCAAgBzB,EAAMI,YAAYqB,KAAlC,KADtD,KAEYzB,EAAMI,YAAYsB,SAIlC,yBAAKzC,UAAU,aAAa0C,wBAAyB,CAAEC,OAAQ5B,EAAM6B,cASjE","file":"component---src-templates-event-jsx-44882e07996177e79e94.js","sourcesContent":["import React from \"react\";\n\nfunction Back() {\n  return (\n    <button className=\"back top right\" onClick={() => window.history.back()}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n        <path d=\"M427 234.625H167.296l119.702-119.702L256 85 85 256l171 171 29.922-29.924-118.626-119.701H427v-42.75z\" />\n      </svg>\n    </button>\n  );\n}\n\nexport default Back;\n","import React from \"react\";\n\nfunction EventLink({ link }) {\n  return (\n    <a className=\"event-link\" href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      More info...\n    </a>\n  );\n}\n\nexport default EventLink;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport SEO from \"../components/SEO\";\nimport Layout from \"../components/Layout\";\nimport Back from \"../components/Back\";\nimport EventLink from \"../components/EventLink\";\n\nexport default ({ data }) => {\n  const { event, pictures } = data;\n  const eventRegex = new RegExp(event.frontmatter.id, \"i\");\n  const coverRegex = new RegExp(\"cover\", \"i\");\n  const eventPictures = pictures.edges.filter(\n    ({ node }) => node.base.match(eventRegex) && !node.base.match(coverRegex)\n  );\n\n  return (\n    <>\n      <SEO title={event.frontmatter.title} />\n      <Layout>\n        <Back />\n        <article className=\"event container container-sm\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-pic col-lg-6\">\n              <div className=\"event-artwork\">\n                {eventPictures.map(({ node }) => (\n                  <Image\n                    key={node.id}\n                    fluid={node.childImageSharp.fluid}\n                    alt={event.frontmatter.title + \" artwork\"}\n                    className=\"artwork-wrapper\"\n                    imgStyle={{ height: \"auto\" }}\n                  />\n                ))}\n              </div>\n              {event.frontmatter.artwork && (\n                <div className=\"event-credits\">\n                  <small>Artwork: {event.frontmatter.artwork}</small>\n                </div>\n              )}\n              <EventLink link={event.frontmatter.link} />\n            </div>\n            <div className=\"col-text col-lg-6\">\n              <div className=\"event-header row align-items-start\">\n                <div className=\"\">\n                  <h1>{event.frontmatter.title}</h1>\n                  <h3 className=\"muted font-weight-normal\">\n                    {event.frontmatter.date} {event.frontmatter.time && <span>&middot; {event.frontmatter.time} </span>}\n                    &middot; {event.frontmatter.venue}\n                  </h3>\n                </div>\n              </div>\n              <div className=\"event-text\" dangerouslySetInnerHTML={{ __html: event.html }} />\n            </div>\n          </div>\n        </article>\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    event: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        id\n        title\n        date(formatString: \"DD MMM\")\n        time\n        venue\n        description\n        link\n        artwork\n      }\n    }\n    pictures: allFile(filter: { sourceInstanceName: { eq: \"images\" } }, sort: { fields: [name], order: ASC }) {\n      edges {\n        node {\n          id\n          base\n          childImageSharp {\n            fluid(maxHeight: 785) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}